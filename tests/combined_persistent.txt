# Combined persistent tests generated by script
#####################################################################################
# Se alguem descobrir erros nesse script, favor avisar a Jacques
# Assim, poderei compartilhar testes corretos com todos.
# (escrevi os testes mas nao os executei ...)
#####################################################################################

# User Story de adicao de empregado

zerarSistema
expectError "Empregado nao existe." getAtributoEmpregado emp=abc atributo=nome

# criacao normal
id1=criarEmpregado nome="Joao da Silva" endereco="Rua dos Jooes, 333 - Campina Grande" \
		tipo=horista salario=23
expect "Joao da Silva" getAtributoEmpregado emp=${id1} atributo=nome
expect "Rua dos Jooes, 333 - Campina Grande" getAtributoEmpregado emp=${id1} atributo=endereco
expect horista getAtributoEmpregado emp=${id1} atributo=tipo
expect 23,00 getAtributoEmpregado emp=${id1} atributo=salario
expect false getAtributoEmpregado emp=${id1} atributo=sindicalizado

# pode ter dois empregados com o mesmo nome
id2=criarEmpregado nome="Joao da Silva" endereco="Rua dos Jooes, 333 - Campina Grande" \
		tipo=horista salario=23
expectDifferent ${id1} echo ${id2}
expect "Joao da Silva" getAtributoEmpregado emp=${id1} atributo=nome
expect "Rua dos Jooes, 333 - Campina Grande" getAtributoEmpregado emp=${id1} atributo=endereco
expect horista getAtributoEmpregado emp=${id1} atributo=tipo
expect 23,00 getAtributoEmpregado emp=${id1} atributo=salario
expect false getAtributoEmpregado emp=${id1} atributo=sindicalizado
expect "Joao da Silva" getAtributoEmpregado emp=${id2} atributo=nome
expect "Rua dos Jooes, 333 - Campina Grande" getAtributoEmpregado emp=${id2} atributo=endereco
expect horista getAtributoEmpregado emp=${id2} atributo=tipo
expect 23,00 getAtributoEmpregado emp=${id2} atributo=salario
expect false getAtributoEmpregado emp=${id2} atributo=sindicalizado

# salario com centavos
id3=criarEmpregado nome="Joao da Silva" endereco="Rua dos Jooes, 333 - Campina Grande" \
		tipo=horista salario=23,32
expect 23,32 getAtributoEmpregado emp=${id3} atributo=salario

# outros tipos de empregados
id4=criarEmpregado nome="Mariazinha" endereco="Rua das Marias, 333 - Campina Grande" \
		tipo=assalariado salario=2300,45
expect "Mariazinha" getAtributoEmpregado emp=${id4} atributo=nome
expect "Rua das Marias, 333 - Campina Grande" getAtributoEmpregado emp=${id4} atributo=endereco
expect assalariado getAtributoEmpregado emp=${id4} atributo=tipo
expect 2300,45 getAtributoEmpregado emp=${id4} atributo=salario
expect false getAtributoEmpregado emp=${id4} atributo=sindicalizado

id5=criarEmpregado nome="Gaiato Vendedor" endereco="Rua dos Bufoes, 333 - Campina Grande" \
		tipo=comissionado salario=2300,45 comissao=0,05
expect "Gaiato Vendedor" getAtributoEmpregado emp=${id5} atributo=nome
expect "Rua dos Bufoes, 333 - Campina Grande" getAtributoEmpregado emp=${id5} atributo=endereco
expect comissionado getAtributoEmpregado emp=${id5} atributo=tipo
expect 2300,45 getAtributoEmpregado emp=${id5} atributo=salario
expect 0,05 getAtributoEmpregado emp=${id5} atributo=comissao
expect false getAtributoEmpregado emp=${id5} atributo=sindicalizado

# erros
expectError "Nome nao pode ser nulo." criarEmpregado nome="" endereco="Rua dos Jooes, 333 - Campina Grande" \
		tipo=horista salario=23,32
expectError "Endereco nao pode ser nulo." criarEmpregado nome="Joao da Silva" endereco="" \
		tipo=horista salario=23,32
expectError "Tipo invalido." criarEmpregado nome="Joao da Silva" endereco="Rua dos Jooes, 333 - Campina Grande" \
		tipo=abc salario=23,32
expectError "Tipo nao aplicavel." criarEmpregado nome="Joao da Silva" endereco="Rua dos Jooes, 333 - Campina Grande" \
		tipo=comissionado salario=23,32
expectError "Salario nao pode ser nulo." criarEmpregado nome="Joao da Silva" endereco="Rua dos Jooes, 333 - Campina Grande" \
		tipo=horista salario=""
expectError "Salario deve ser numerico." criarEmpregado nome="Joao da Silva" endereco="Rua dos Jooes, 333 - Campina Grande" \
		tipo=horista salario=abc
expectError "Salario deve ser nao-negativo." criarEmpregado nome="Joao da Silva" endereco="Rua dos Jooes, 333 - Campina Grande" \
		tipo=horista salario=-1
expectError "Comissao nao pode ser nula." criarEmpregado nome="Joao da Silva" endereco="Rua dos Jooes, 333 - Campina Grande" \
		tipo=comissionado salario=1 comissao=""
expectError "Comissao deve ser nao-negativa." criarEmpregado nome="Joao da Silva" endereco="Rua dos Jooes, 333 - Campina Grande" \
		tipo=comissionado salario=1 comissao=-1
expectError "Comissao deve ser numerica." criarEmpregado nome="Joao da Silva" endereco="Rua dos Jooes, 333 - Campina Grande" \
		tipo=comissionado salario=1 comissao=a
expectError "Tipo nao aplicavel." criarEmpregado nome="Joao da Silva" endereco="Rua dos Jooes, 333 - Campina Grande" \
		tipo=horista salario=23,32 comissao=0,05
expectError "Tipo nao aplicavel." criarEmpregado nome="Joao da Silva" endereco="Rua dos Jooes, 333 - Campina Grande" \
		tipo=assalariado salario=23,32 comissao=0,05
expectError "Identificacao do empregado nao pode ser nula." getAtributoEmpregado emp="" atributo=nome
expectError "Empregado nao existe." getAtributoEmpregado emp=abc atributo=sindicalizado
expectError "Atributo nao existe." getAtributoEmpregado emp=${id1} atributo=abc

#####################################################################################
# Se alguem descobrir erros nesse script, favor avisar a Jacques
# Assim, poderei compartilhar testes corretos com todos.
# (escrevi os testes mas nao os executei ...)
#####################################################################################

# User Story de adicao de empregado (teste de persistencia)

expectError "Nao ha empregado com esse nome." getEmpregadoPorNome nome="Ze Cachaceiro" indice=1

id1=getEmpregadoPorNome nome="Joao da Silva" indice=1
# isso significa "a primeira pessoa cujo nome contem "Joao da Silva" (porque pode haver mais pessoas com este string no nome)
expect "Joao da Silva" getAtributoEmpregado emp=${id1} atributo=nome
expect "Rua dos Jooes, 333 - Campina Grande" getAtributoEmpregado emp=${id1} atributo=endereco
expect horista getAtributoEmpregado emp=${id1} atributo=tipo
expect 23,00 getAtributoEmpregado emp=${id1} atributo=salario

id2=getEmpregadoPorNome nome="Joao da Silva" indice=2
expectDifferent ${id1} echo ${id2}
expect "Joao da Silva" getAtributoEmpregado emp=${id2} atributo=nome
expect "Rua dos Jooes, 333 - Campina Grande" getAtributoEmpregado emp=${id2} atributo=endereco
expect horista getAtributoEmpregado emp=${id2} atributo=tipo
expect 23,00 getAtributoEmpregado emp=${id2} atributo=salario

id3=getEmpregadoPorNome nome="Joao da Silva" indice=3
expect 23,32 getAtributoEmpregado emp=${id3} atributo=salario

id4=getEmpregadoPorNome nome="Mariazinha" indice=1
expect "Mariazinha" getAtributoEmpregado emp=${id4} atributo=nome
expect "Rua das Marias, 333 - Campina Grande" getAtributoEmpregado emp=${id4} atributo=endereco
expect assalariado getAtributoEmpregado emp=${id4} atributo=tipo
expect 2300,45 getAtributoEmpregado emp=${id4} atributo=salario

id5=getEmpregadoPorNome nome="Gaiato Vendedor" indice=1
expect "Gaiato Vendedor" getAtributoEmpregado emp=${id5} atributo=nome
expect "Rua dos Bufoes, 333 - Campina Grande" getAtributoEmpregado emp=${id5} atributo=endereco
expect comissionado getAtributoEmpregado emp=${id5} atributo=tipo
expect 2300,45 getAtributoEmpregado emp=${id5} atributo=salario
expect 0,05 getAtributoEmpregado emp=${id5} atributo=comissao
#####################################################################################
# Se alguem descobrir erros nesse script, favor avisar a Jacques
# Assim, poderei compartilhar testes corretos com todos.
# (escrevi os testes mas nao os executei ...)
#####################################################################################

# User Story de adicao de empregado

zerarSistema

id1=criarEmpregado nome="Joao da Silva" endereco="Rua dos Jooes, 333 - Campina Grande" \
		tipo=horista salario=23
expect "Joao da Silva" getAtributoEmpregado emp=${id1} atributo=nome
expect "Rua dos Jooes, 333 - Campina Grande" getAtributoEmpregado emp=${id1} atributo=endereco
expect horista getAtributoEmpregado emp=${id1} atributo=tipo
expect 23,00 getAtributoEmpregado emp=${id1} atributo=salario
id2=criarEmpregado nome="Maria" endereco="Rua dos Jooes, 333 - Campina Grande" \
		tipo=horista salario=23
expect "Maria" getAtributoEmpregado emp=${id2} atributo=nome
expect "Rua dos Jooes, 333 - Campina Grande" getAtributoEmpregado emp=${id2} atributo=endereco
expect horista getAtributoEmpregado emp=${id2} atributo=tipo
expect 23,00 getAtributoEmpregado emp=${id2} atributo=salario

removerEmpregado emp=${id1}
expectError "Empregado nao existe." removerEmpregado emp=${id1}
expectError "Empregado nao existe." getAtributoEmpregado emp=${id1} atributo=nome
expect "Maria" getAtributoEmpregado emp=${id2} atributo=nome
expect "Rua dos Jooes, 333 - Campina Grande" getAtributoEmpregado emp=${id2} atributo=endereco
expect horista getAtributoEmpregado emp=${id2} atributo=tipo
expect 23,00 getAtributoEmpregado emp=${id2} atributo=salario

# erros
expectError "Identificacao do empregado nao pode ser nula." removerEmpregado emp=""
expectError "Empregado nao existe." removerEmpregado emp=abc

#####################################################################################
# Se alguem descobrir erros nesse script, favor avisar a Jacques
# Assim, poderei compartilhar testes corretos com todos.
# (escrevi os testes mas nao os executei ...)
#####################################################################################

# User Story de remocao de empregado (teste de persistencia)

expectError "Nao ha empregado com esse nome." getEmpregadoPorNome nome="Joao da Silva" indice=1

id2=getEmpregadoPorNome nome="Maria" indice=1
expect "Maria" getAtributoEmpregado emp=${id2} atributo=nome
expect "Rua dos Jooes, 333 - Campina Grande" getAtributoEmpregado emp=${id2} atributo=endereco
expect horista getAtributoEmpregado emp=${id2} atributo=tipo
expect 23,00 getAtributoEmpregado emp=${id2} atributo=salario

#####################################################################################
# Se alguem descobrir erros nesse script, favor avisar a Jacques
# Assim, poderei compartilhar testes corretos com todos.
# (escrevi os testes mas nao os executei ...)
#####################################################################################

# User Story de lancamento de cartao de ponto

zerarSistema

id1=criarEmpregado nome="Joao da Silva" endereco="Rua dos Jooes, 333 - Campina Grande" \
		tipo=horista salario=23
id2=criarEmpregado nome="Mariazinha" endereco="Rua das Marias, 333 - Campina Grande" \
		tipo=horista salario=2300
id3=criarEmpregado nome="Gaiato Vendedor" endereco="Rua dos Bufoes, 333 - Campina Grande" \
		tipo=comissionado salario=1300 comissao=0,05 
id4=criarEmpregado nome="Gorete" endereco="Rua das Marias, 333 - Campina Grande" \
		tipo=assalariado salario=2300

expect 0 getHorasNormaisTrabalhadas emp=${id1} dataInicial=1/1/2005 dataFinal=31/12/2005
expect 0 getHorasExtrasTrabalhadas emp=${id1} dataInicial=1/1/2005 dataFinal=31/12/2005
lancaCartao emp=${id1} data=1/1/2005 horas=8
lancaCartao emp=${id1} data=2/1/2005 horas=8,5
lancaCartao emp=${id1} data=3/1/2005 horas=9
lancaCartao emp=${id1} data=4/1/2005 horas=6
lancaCartao emp=${id2} data=3/1/2005 horas=10
# uma data sempre significa 00:00 horas daquele dia
expect 8 getHorasNormaisTrabalhadas emp=${id1} dataInicial=1/1/2005 dataFinal=02/01/2005
expect 0 getHorasExtrasTrabalhadas emp=${id1} dataInicial=1/1/2005 dataFinal=2/1/2005
expect 16 getHorasNormaisTrabalhadas emp=${id1} dataInicial=2/1/2005 dataFinal=4/1/2005
expect 1,5 getHorasExtrasTrabalhadas emp=${id1} dataInicial=2/1/2005 dataFinal=4/1/2005
expect 0 getHorasNormaisTrabalhadas emp=${id1} dataInicial=1/1/2005 dataFinal=1/1/2005
expect 0 getHorasExtrasTrabalhadas emp=${id1} dataInicial=1/1/2005 dataFinal=1/1/2005
expect 0 getHorasNormaisTrabalhadas emp=${id1} dataInicial=5/1/2005 dataFinal=1/2/2005
expect 0 getHorasExtrasTrabalhadas emp=${id1} dataInicial=5/1/2005 dataFinal=1/2/2005

expect 8 getHorasNormaisTrabalhadas emp=${id2} dataInicial=1/1/2005 dataFinal=31/12/2005
expect 2 getHorasExtrasTrabalhadas emp=${id2} dataInicial=1/1/2005 dataFinal=31/12/2005

# teste de erros
expectError "Identificacao do empregado nao pode ser nula." lancaCartao emp="" data=1/1/2005 horas=8
expectError "Empregado nao existe." lancaCartao emp=abc data=1/1/2005 horas=8
expectError "Empregado nao eh horista." lancaCartao emp=${id3} data=1/1/2005 horas=8
expectError "Empregado nao eh horista." lancaCartao emp=${id4} data=1/1/2005 horas=8
expectError "Data invalida." lancaCartao emp=${id1} data=1/13/2005 horas=8
expectError "Horas devem ser positivas." lancaCartao emp=${id1} data=1/12/2005 horas=0
expectError "Horas devem ser positivas." lancaCartao emp=${id1} data=1/12/2005 horas=-1

expectError "Empregado nao eh horista." getHorasNormaisTrabalhadas emp=${id3} dataInicial=1/1/2005 dataFinal=2/1/2005
expectError "Empregado nao eh horista." getHorasNormaisTrabalhadas emp=${id4} dataInicial=1/1/2005 dataFinal=2/1/2005
expectError "Data inicial invalida." getHorasNormaisTrabalhadas emp=${id1} dataInicial=41/1/2005 dataFinal=2/1/2005
expectError "Data final invalida." getHorasNormaisTrabalhadas emp=${id1} dataInicial=1/1/2005 dataFinal=30/2/2005
expectError "Data inicial nao pode ser posterior aa data final." getHorasNormaisTrabalhadas emp=${id1} dataInicial=2/1/2005 dataFinal=1/1/2005

#####################################################################################
# Se alguem descobrir erros nesse script, favor avisar a Jacques
# Assim, poderei compartilhar testes corretos com todos.
# (escrevi os testes mas nao os executei ...)
#####################################################################################

# User Story de lancamento de cartao de ponto (persistencia)

id1=getEmpregadoPorNome nome="Joao da Silva" indice=1
id2=getEmpregadoPorNome nome="Mariazinha" indice=1

expect 8 getHorasNormaisTrabalhadas emp=${id1} dataInicial=1/1/2005 dataFinal=02/01/2005
expect 0 getHorasExtrasTrabalhadas emp=${id1} dataInicial=1/1/2005 dataFinal=2/1/2005
expect 16 getHorasNormaisTrabalhadas emp=${id1} dataInicial=2/1/2005 dataFinal=4/1/2005
expect 1,5 getHorasExtrasTrabalhadas emp=${id1} dataInicial=2/1/2005 dataFinal=4/1/2005
expect 0 getHorasNormaisTrabalhadas emp=${id1} dataInicial=1/1/2005 dataFinal=1/1/2005
expect 0 getHorasExtrasTrabalhadas emp=${id1} dataInicial=1/1/2005 dataFinal=1/1/2005
expect 0 getHorasNormaisTrabalhadas emp=${id1} dataInicial=5/1/2005 dataFinal=1/2/2005
expect 0 getHorasExtrasTrabalhadas emp=${id1} dataInicial=5/1/2005 dataFinal=1/2/2005

expect 8 getHorasNormaisTrabalhadas emp=${id2} dataInicial=1/1/2005 dataFinal=31/12/2005
expect 2 getHorasExtrasTrabalhadas emp=${id2} dataInicial=1/1/2005 dataFinal=31/12/2005

#####################################################################################
# Se alguem descobrir erros nesse script, favor avisar a Jacques
# Assim, poderei compartilhar testes corretos com todos.
# (escrevi os testes mas nao os executei ...)
#####################################################################################

# User Story de lancamento de resultado de venda

zerarSistema

id1=criarEmpregado nome="Joao da Silva" endereco="Rua dos Jooes, 333 - Campina Grande" \
		tipo=comissionado salario=1300 comissao=0,05 
id2=criarEmpregado nome="Mariazinha" endereco="Rua das Marias, 333 - Campina Grande" \
		tipo=comissionado salario=2300 comissao=0,05 
id3=criarEmpregado nome="Gaiato Vendedor" endereco="Rua dos Bufoes, 333 - Campina Grande" \
		tipo=horista salario=13
id4=criarEmpregado nome="Gorete" endereco="Rua das Marias, 333 - Campina Grande" \
		tipo=assalariado salario=2300

expect 0,00 getVendasRealizadas emp=${id1} dataInicial=1/1/2005 dataFinal=31/12/2005
lancaVenda emp=${id1} data=1/1/2005 valor=800
lancaVenda emp=${id1} data=2/1/2005 valor=850,5
lancaVenda emp=${id1} data=3/1/2005 valor=900
lancaVenda emp=${id1} data=4/1/2005 valor=600
lancaVenda emp=${id2} data=3/1/2005 valor=1000
# uma data sempre significa 00:00 horas daquele dia
expect 800,00 getVendasRealizadas emp=${id1} dataInicial=1/1/2005 dataFinal=02/01/2005
expect 1750,50 getVendasRealizadas emp=${id1} dataInicial=2/1/2005 dataFinal=4/1/2005
expect 0,00 getVendasRealizadas emp=${id1} dataInicial=1/1/2005 dataFinal=1/1/2005
expect 0,00 getVendasRealizadas emp=${id1} dataInicial=5/1/2005 dataFinal=1/2/2005

expect 1000,00 getVendasRealizadas emp=${id2} dataInicial=1/1/2005 dataFinal=31/12/2005

# teste de erros
expectError "Identificacao do empregado nao pode ser nula." lancaVenda emp="" data=1/1/2005 valor=800
expectError "Empregado nao existe." lancaVenda emp=abc data=1/1/2005 valor=800
expectError "Empregado nao eh comissionado." lancaVenda emp=${id3} data=1/1/2005 valor=800
expectError "Empregado nao eh comissionado." lancaVenda emp=${id4} data=1/1/2005 valor=800
expectError "Data invalida." lancaVenda emp=${id1} data=1/13/2005 valor=800
expectError "Valor deve ser positivo." lancaVenda emp=${id1} data=1/12/2005 valor=0
expectError "Valor deve ser positivo." lancaVenda emp=${id1} data=1/12/2005 valor=-1

expectError "Empregado nao eh comissionado." getVendasRealizadas emp=${id3} dataInicial=1/1/2005 dataFinal=2/1/2005
expectError "Empregado nao eh comissionado." getVendasRealizadas emp=${id4} dataInicial=1/1/2005 dataFinal=2/1/2005
expectError "Data inicial invalida." getVendasRealizadas emp=${id1} dataInicial=41/1/2005 dataFinal=2/1/2005
expectError "Data final invalida." getVendasRealizadas emp=${id1} dataInicial=1/1/2005 dataFinal=30/2/2005
expectError "Data inicial nao pode ser posterior aa data final." getVendasRealizadas emp=${id1} dataInicial=2/1/2005 dataFinal=1/1/2005

#####################################################################################
# Se alguem descobrir erros nesse script, favor avisar a Jacques
# Assim, poderei compartilhar testes corretos com todos.
# (escrevi os testes mas nao os executei ...)
#####################################################################################

# User Story de lancamento de resultado de venda (persistencia)

id1=getEmpregadoPorNome nome="Joao da Silva" indice=1
id2=getEmpregadoPorNome nome="Mariazinha" indice=1

expect 800,00 getVendasRealizadas emp=${id1} dataInicial=1/1/2005 dataFinal=02/01/2005
expect 1750,50 getVendasRealizadas emp=${id1} dataInicial=2/1/2005 dataFinal=4/1/2005
expect 0,00 getVendasRealizadas emp=${id1} dataInicial=1/1/2005 dataFinal=1/1/2005
expect 0,00 getVendasRealizadas emp=${id1} dataInicial=5/1/2005 dataFinal=1/2/2005

expect 1000,00 getVendasRealizadas emp=${id2} dataInicial=1/1/2005 dataFinal=31/12/2005
#####################################################################################
# Se alguem descobrir erros nesse script, favor avisar a Jacques
# Assim, poderei compartilhar testes corretos com todos.
# (escrevi os testes mas nao os executei ...)
#####################################################################################

# User Story de lancamento de taxa de servico

zerarSistema

id1=criarEmpregado nome="Joao da Silva" endereco="Rua dos Jooes, 333 - Campina Grande" \
		tipo=comissionado salario=2300 comissao=0,05
alteraEmpregado emp=${id1} atributo=sindicalizado valor=true idSindicato=s128 taxaSindical=1,00
id2=criarEmpregado nome="Mariazinha" endereco="Rua das Marias, 333 - Campina Grande" \
		tipo=assalariado salario=2300
alteraEmpregado emp=${id2} atributo=sindicalizado valor=true idSindicato=s129 taxaSindical=1,00
id3=criarEmpregado nome="Gaiato Vendedor" endereco="Rua dos Bufoes, 333 - Campina Grande" \
		tipo=horista salario=1300
alteraEmpregado emp=${id3} atributo=sindicalizado valor=true idSindicato=s130 taxaSindical=1,00
id4=criarEmpregado nome="Gorete" endereco="Rua das Marias, 333 - Campina Grande" \
		tipo=horista salario=1300
alteraEmpregado emp=${id4} atributo=sindicalizado valor=false

expect 0,00 getTaxasServico emp=${id1} dataInicial=1/1/2005 dataFinal=31/12/2005
lancaTaxaServico membro=s128 data=1/1/2005 valor=80
lancaTaxaServico membro=s128 data=2/1/2005 valor=85,5
lancaTaxaServico membro=s128 data=3/1/2005 valor=90
lancaTaxaServico membro=s128 data=4/1/2005 valor=60
lancaTaxaServico membro=s129 data=3/1/2005 valor=100
# uma data sempre significa 00:00 horas daquele dia
expect 80,00 getTaxasServico emp=${id1} dataInicial=1/1/2005 dataFinal=02/01/2005
expect 175,50 getTaxasServico emp=${id1} dataInicial=2/1/2005 dataFinal=4/1/2005
expect 0,00 getTaxasServico emp=${id1} dataInicial=1/1/2005 dataFinal=1/1/2005
expect 0,00 getTaxasServico emp=${id1} dataInicial=5/1/2005 dataFinal=1/2/2005

expect 100,00 getTaxasServico emp=${id2} dataInicial=1/1/2005 dataFinal=31/12/2005

# teste de erros
expectError "Identificacao do membro nao pode ser nula." lancaTaxaServico membro="" data=1/1/2005 valor=80
expectError "Membro nao existe." lancaTaxaServico membro=abc data=1/1/2005 valor=80
expectError "Data invalida." lancaTaxaServico membro=s128 data=1/13/2005 valor=80
expectError "Valor deve ser positivo." lancaTaxaServico membro=s128 data=1/12/2005 valor=0
expectError "Valor deve ser positivo." lancaTaxaServico membro=s128 data=1/12/2005 valor=-1

expectError "Empregado nao eh sindicalizado." getTaxasServico emp=${id4} dataInicial=1/1/2005 dataFinal=2/1/2005
expectError "Data inicial invalida." getTaxasServico emp=${id1} dataInicial=41/1/2005 dataFinal=2/1/2005
expectError "Data final invalida." getTaxasServico emp=${id1} dataInicial=1/1/2005 dataFinal=30/2/2005
expectError "Data inicial nao pode ser posterior aa data final." getTaxasServico emp=${id1} dataInicial=2/1/2005 dataFinal=1/1/2005

expectError "Ha outro empregado com esta identificacao de sindicato" alteraEmpregado emp=${id4} atributo=sindicalizado valor=true idSindicato=s129 taxaSindical=1,00

#####################################################################################
# Se alguem descobrir erros nesse script, favor avisar a Jacques
# Assim, poderei compartilhar testes corretos com todos.
# (escrevi os testes mas nao os executei ...)
#####################################################################################

# User Story de lancamento de taxas de servico (persistencia)

id1=getEmpregadoPorNome nome="Joao da Silva" indice=1
id2=getEmpregadoPorNome nome="Mariazinha" indice=1

expect 80,00 getTaxasServico emp=${id1} dataInicial=1/1/2005 dataFinal=02/01/2005
expect 175,50 getTaxasServico emp=${id1} dataInicial=2/1/2005 dataFinal=4/1/2005
expect 0,00 getTaxasServico emp=${id1} dataInicial=1/1/2005 dataFinal=1/1/2005
expect 0,00 getTaxasServico emp=${id1} dataInicial=5/1/2005 dataFinal=1/2/2005

expect 100,00 getTaxasServico emp=${id2} dataInicial=1/1/2005 dataFinal=31/12/2005

#####################################################################################
# Se alguem descobrir erros nesse script, favor avisar a Jacques
# Assim, poderei compartilhar testes corretos com todos.
# (escrevi os testes mas nao os executei ...)
#####################################################################################

# User Story de alteracao de empregado

zerarSistema

id1=criarEmpregado nome="Joao da Silva" endereco="Rua dos Jooes, 333 - Campina Grande" \
		tipo=horista salario=23
# valores iniciais
expect "Joao da Silva" getAtributoEmpregado emp=${id1} atributo=nome
expect "Rua dos Jooes, 333 - Campina Grande" getAtributoEmpregado emp=${id1} atributo=endereco
expect horista getAtributoEmpregado emp=${id1} atributo=tipo
expect 23,00 getAtributoEmpregado emp=${id1} atributo=salario
expectError "Empregado nao eh comissionado." getAtributoEmpregado emp=${id1} atributo=comissao
expect emMaos getAtributoEmpregado emp=${id1} atributo=metodoPagamento
expectError "Empregado nao recebe em banco." getAtributoEmpregado emp=${id1} atributo=banco
expectError "Empregado nao recebe em banco." getAtributoEmpregado emp=${id1} atributo=agencia
expectError "Empregado nao recebe em banco." getAtributoEmpregado emp=${id1} atributo=contaCorrente
expect false getAtributoEmpregado emp=${id1} atributo=sindicalizado
expectError "Empregado nao eh sindicalizado." getAtributoEmpregado emp=${id1} atributo=idSindicato
expectError "Empregado nao eh sindicalizado." getAtributoEmpregado emp=${id1} atributo=taxaSindical

# serie de alteracoes
alteraEmpregado emp=${id1} atributo=nome valor="Joaozinho da Silva"
alteraEmpregado emp=${id1} atributo=endereco valor="Rua dos Jooes, 334 - Campina Grande"
alteraEmpregado emp=${id1} atributo=tipo valor=assalariado
alteraEmpregado emp=${id1} atributo=salario valor=1000
expectError "Empregado nao eh comissionado." alteraEmpregado emp=${id1} atributo=comissao valor=0,05
alteraEmpregado emp=${id1} atributo=metodoPagamento valor1=banco banco="Banco do Brasil" agencia=1591-1 contaCorrente=51000-0
alteraEmpregado emp=${id1} atributo=sindicalizado valor=true idSindicato=s123 taxaSindical=30

expect "Joaozinho da Silva" getAtributoEmpregado emp=${id1} atributo=nome
expect "Rua dos Jooes, 334 - Campina Grande" getAtributoEmpregado emp=${id1} atributo=endereco
expect assalariado getAtributoEmpregado emp=${id1} atributo=tipo
expect 1000,00 getAtributoEmpregado emp=${id1} atributo=salario
expectError "Empregado nao eh comissionado." getAtributoEmpregado emp=${id1} atributo=comissao
expect banco getAtributoEmpregado emp=${id1} atributo=metodoPagamento
expect "Banco do Brasil" getAtributoEmpregado emp=${id1} atributo=banco
expect 1591-1 getAtributoEmpregado emp=${id1} atributo=agencia
expect 51000-0 getAtributoEmpregado emp=${id1} atributo=contaCorrente
expect true getAtributoEmpregado emp=${id1} atributo=sindicalizado
expect s123 getAtributoEmpregado emp=${id1} atributo=idSindicato
expect 30,00 getAtributoEmpregado emp=${id1} atributo=taxaSindical

# serie de alteracoes
alteraEmpregado emp=${id1} atributo=tipo valor=comissionado comissao=0,02
alteraEmpregado emp=${id1} atributo=salario valor=500

expect comissionado getAtributoEmpregado emp=${id1} atributo=tipo
expect 500,00 getAtributoEmpregado emp=${id1} atributo=salario
expect 0,02 getAtributoEmpregado emp=${id1} atributo=comissao

# serie de alteracoes
alteraEmpregado emp=${id1} atributo=comissao valor=0,03

expect comissionado getAtributoEmpregado emp=${id1} atributo=tipo
expect 500,00 getAtributoEmpregado emp=${id1} atributo=salario
expect 0,03 getAtributoEmpregado emp=${id1} atributo=comissao

# serie de alteracoes
alteraEmpregado emp=${id1} atributo=metodoPagamento valor1=correios

expect correios getAtributoEmpregado emp=${id1} atributo=metodoPagamento
expectError "Empregado nao recebe em banco." getAtributoEmpregado emp=${id1} atributo=banco
expectError "Empregado nao recebe em banco." getAtributoEmpregado emp=${id1} atributo=agencia
expectError "Empregado nao recebe em banco." getAtributoEmpregado emp=${id1} atributo=contaCorrente

# serie de alteracoes
alteraEmpregado emp=${id1} atributo=sindicalizado valor=false

expect false getAtributoEmpregado emp=${id1} atributo=sindicalizado
expectError "Empregado nao eh sindicalizado." getAtributoEmpregado emp=${id1} atributo=idSindicato
expectError "Empregado nao eh sindicalizado." getAtributoEmpregado emp=${id1} atributo=taxaSindical

# serie de alteracoes
alteraEmpregado emp=${id1} atributo=nome valor="Joao da Silva"
alteraEmpregado emp=${id1} atributo=endereco valor="Rua dos Jooes, 333 - Campina Grande"
alteraEmpregado emp=${id1} atributo=tipo valor=horista salario=23
alteraEmpregado emp=${id1} atributo=metodoPagamento valor=emMaos
alteraEmpregado emp=${id1} atributo=sindicalizado valor=false

expect "Joao da Silva" getAtributoEmpregado emp=${id1} atributo=nome
expect "Rua dos Jooes, 333 - Campina Grande" getAtributoEmpregado emp=${id1} atributo=endereco
expect horista getAtributoEmpregado emp=${id1} atributo=tipo
expect 23,00 getAtributoEmpregado emp=${id1} atributo=salario
expectError "Empregado nao eh comissionado." getAtributoEmpregado emp=${id1} atributo=comissao
expect emMaos getAtributoEmpregado emp=${id1} atributo=metodoPagamento
expectError "Empregado nao recebe em banco." getAtributoEmpregado emp=${id1} atributo=banco
expectError "Empregado nao recebe em banco." getAtributoEmpregado emp=${id1} atributo=agencia
expectError "Empregado nao recebe em banco." getAtributoEmpregado emp=${id1} atributo=contaCorrente
expect false getAtributoEmpregado emp=${id1} atributo=sindicalizado
expectError "Empregado nao eh sindicalizado." getAtributoEmpregado emp=${id1} atributo=idSindicato
expectError "Empregado nao eh sindicalizado." getAtributoEmpregado emp=${id1} atributo=taxaSindical

# erros
expectError "Identificacao do empregado nao pode ser nula." alteraEmpregado emp="" atributo=sindicalizado valor=true
expectError "Empregado nao existe." alteraEmpregado emp=abc atributo=nome valor=joao
expectError "Atributo nao existe." alteraEmpregado emp=${id1} atributo=abc valor=111
expectError "Nome nao pode ser nulo." alteraEmpregado emp=${id1} atributo=nome valor=""
expectError "Endereco nao pode ser nulo." alteraEmpregado emp=${id1} atributo=endereco valor=""
expectError "Tipo invalido." alteraEmpregado emp=${id1} atributo=tipo valor=abc
expectError "Salario nao pode ser nulo." alteraEmpregado emp=${id1} atributo=salario valor=""
expectError "Salario deve ser numerico." alteraEmpregado emp=${id1} atributo=salario valor=a
expectError "Salario deve ser nao-negativo." alteraEmpregado emp=${id1} atributo=salario valor=-1
alteraEmpregado emp=${id1} atributo=tipo valor=comissionado comissao=0,02
expectError "Comissao nao pode ser nula." alteraEmpregado emp=${id1} atributo=comissao valor=""
expectError "Comissao deve ser numerica." alteraEmpregado emp=${id1} atributo=comissao valor=a
expectError "Comissao deve ser nao-negativa." alteraEmpregado emp=${id1} atributo=comissao valor=-1
expectError "Metodo de pagamento invalido." alteraEmpregado emp=${id1} atributo=metodoPagamento valor=abc
expectError "Banco nao pode ser nulo." alteraEmpregado emp=${id1} atributo=metodoPagamento valor1=banco banco="" agencia=1591-1 contaCorrente=51000-0
expectError "Agencia nao pode ser nulo." alteraEmpregado emp=${id1} atributo=metodoPagamento valor1=banco banco="Banco do Brasil" agencia="" contaCorrente=51000-0
expectError "Conta corrente nao pode ser nulo." alteraEmpregado emp=${id1} atributo=metodoPagamento valor1=banco banco="Banco do Brasil" agencia=1591-1 contaCorrente=""
expectError "Valor deve ser true ou false." alteraEmpregado emp=${id1} atributo=sindicalizado valor=abc
expectError "Identificacao do sindicato nao pode ser nula." alteraEmpregado emp=${id1} atributo=sindicalizado valor=true idSindicato="" taxaSindical=30
expectError "Taxa sindical nao pode ser nula." alteraEmpregado emp=${id1} atributo=sindicalizado valor=true idSindicato=s123 taxaSindical=""
expectError "Taxa sindical deve ser numerica." alteraEmpregado emp=${id1} atributo=sindicalizado valor=true idSindicato=s123 taxaSindical=a
expectError "Taxa sindical deve ser nao-negativa." alteraEmpregado emp=${id1} atributo=sindicalizado valor=true idSindicato=s123 taxaSindical=-1

#####################################################################################
# Se alguem descobrir erros nesse script, favor avisar a Jacques
# Assim, poderei compartilhar testes corretos com todos.
# (escrevi os testes mas nao os executei ...)
#####################################################################################

# User Story de alteracao de empregado (persistencia)

id1=getEmpregadoPorNome nome="Joao da Silva" indice=1

expect "Joao da Silva" getAtributoEmpregado emp=${id1} atributo=nome
expect "Rua dos Jooes, 333 - Campina Grande" getAtributoEmpregado emp=${id1} atributo=endereco
expect comissionado getAtributoEmpregado emp=${id1} atributo=tipo
expect 23,00 getAtributoEmpregado emp=${id1} atributo=salario
expect 0,02 getAtributoEmpregado emp=${id1} atributo=comissao
expect emMaos getAtributoEmpregado emp=${id1} atributo=metodoPagamento
expectError "Empregado nao recebe em banco." getAtributoEmpregado emp=${id1} atributo=banco
expectError "Empregado nao recebe em banco." getAtributoEmpregado emp=${id1} atributo=agencia
expectError "Empregado nao recebe em banco." getAtributoEmpregado emp=${id1} atributo=contaCorrente
expect false getAtributoEmpregado emp=${id1} atributo=sindicalizado
expectError "Empregado nao eh sindicalizado." getAtributoEmpregado emp=${id1} atributo=idSindicato
expectError "Empregado nao eh sindicalizado." getAtributoEmpregado emp=${id1} atributo=taxaSindical

#####################################################################################
# Se alguem descobrir erros nesse script, favor avisar a Jacques
# Assim, poderei compartilhar testes corretos com todos.
# (escrevi os testes mas nao os executei ...)
#####################################################################################

# User Story de pagamento
# Numa folha real, teriamos que produzir outras saidas tais como 
# contracheques, lista de depositos para cada banco, lista de cheques para gerente financeiro, recibos, 
# lancamentos na contabilidade, etc.
# Aqui, ficaremos contentes so com um resumo dos pagamentos da folha

# ESCLARECIMENTO SOBRE TAXAS SINDICAIS
# As taxas sindicais passaram a ser indicadas nos testes como um valor diario. Isso e necessario porque os diferentes
# tipos de empregados recebem com periodicidade diferente (mensal, quinzenal, semanal, e ainda podem ser criadas outras,
# como voces verao nos próximos milestones). Portanto, agora, em vez de valores como 30 ou 40 reais, voces verao 1 ou
# 1,20 reais. Cada vez que um empregado recebe, nao importa em que dia, ele tem deduzido o valor correspondente das taxas
# sindicais desde o ultimo pagamento (ex.: com taxa sindical de 1 real, assalariado paga 31 reais em janeiro, 28 em 
# fevereiro, etc.; horista paga 7 reais a cada semana, comissionado paga 14 a cada quinzena)
# 
# Obs. 1: horista nao pode ter contracheque negativo; se trabalhou durante o periodo menos do que o necessario para pagar
# a taxa sindical, no dia que deveria receber, a folha vem zerada, e o debito com o sindicato e diminuido do valor que ele
# receberia (isso nao esta testado, mas se preparem, porque podemos colocar nos testes extra)
# 
# Obs. 2: as taxas extra sao pontuais e cobradas sempre no proximo pagamento, valendo a mesma regra anterior de que nao
# pode haver contracheque negativo

# ESCLARECIMENTO SOBRE DATAS DE CONTRATO DE EMPREGADOS
# Como falta um comando para especificar a data de contrato de um empregado (poderia ser tambem atributo de criarEmpregado),
# considerem, para saber em que dia o empregado devera ser pago, para os testes abaixo, as seguintes regras:
# 1 - empregados horistas sao contratados no primeiro dia em que lancarem um cartao (nao necessariamente 1/1/2005)
# 2 - empregados assalariados (e comissionados) sao contratados sempre no dia 1/1/2005

# ESCLARECIMENTO SOBRE PAGAMENTO QUINZENAL DE COMISSIONADOS
# O "quinzenal" nao se refere a segunda semana do mes, e sim a periodicidade  de 15 em 15 dias a partir do dia de contrato.
# Coincidentemente, o dia 1/1/2005 e um sabado, o que faz o primeiro pagamento do comissionado cair exatamente na 
# sexta-feira, mas o primeiro pagamento deve ser feito na sexta-feira da segunda semana de trabalho, e de 15 em 15 dias 
# a partir dai. 
# Assim, como o ano tem 52 semanas, havera 26 pagamentos, e nao 24. Consequentemente, o salario base do comissionado e
# calculado como salario*12/52.

zerarSistema

# empregado horista, sem horas, sem sindicato
id1=criarEmpregado nome="Fernanda Montenegro" endereco="end1" tipo=horista salario=12,50
alteraEmpregado emp=${id1} atributo=sindicalizado valor=false
alteraEmpregado emp=${id1} atributo=metodoPagamento valor=emMaos

# empregado horista, com horas, sem overtime, sem sindicato
id2=criarEmpregado nome="Paloma Duarte" endereco="end2" tipo=horista salario=11,25
alteraEmpregado emp=${id2} atributo=sindicalizado valor=false
alteraEmpregado emp=${id2} atributo=metodoPagamento valor1=banco banco="Banco do Brasil" agencia=1591-1 contaCorrente=51000-0
lancaCartao emp=${id2} data=1/1/2005 horas=8
lancaCartao emp=${id2} data=2/1/2005 horas=7
lancaCartao emp=${id2} data=1/2/2005 horas=8
lancaCartao emp=${id2} data=2/2/2005 horas=7
lancaCartao emp=${id2} data=1/12/2005 horas=8
lancaCartao emp=${id2} data=2/12/2005 horas=7

# empregado horista, com horas, com overtime, sem sindicato
id3=criarEmpregado nome="Lavinia Vlasak" endereco="end3" tipo=horista salario=11,21
alteraEmpregado emp=${id3} atributo=sindicalizado valor=false
alteraEmpregado emp=${id3} atributo=metodoPagamento valor1=banco banco="Banco do Brasil" agencia=1591-1 contaCorrente=51001-1
lancaCartao emp=${id3} data=1/1/2005 horas=10
lancaCartao emp=${id3} data=2/1/2005 horas=7
lancaCartao emp=${id3} data=1/2/2005 horas=8
lancaCartao emp=${id3} data=2/2/2005 horas=7
lancaCartao emp=${id3} data=1/12/2005 horas=12
lancaCartao emp=${id3} data=2/12/2005 horas=7

# empregado horista, com horas, com overtime, com sindicato, sem taxas adicionais
id4=criarEmpregado nome="Claudia Abreu" endereco="end4" tipo=horista salario=11,00
alteraEmpregado emp=${id4} atributo=sindicalizado valor=true idSindicato=s123 taxaSindical=1,00
alteraEmpregado emp=${id4} atributo=metodoPagamento valor=emMaos
lancaCartao emp=${id4} data=1/1/2005 horas=10
lancaCartao emp=${id4} data=2/1/2005 horas=7
lancaCartao emp=${id4} data=1/2/2005 horas=8
lancaCartao emp=${id4} data=2/2/2005 horas=7
lancaCartao emp=${id4} data=1/12/2005 horas=12
lancaCartao emp=${id4} data=2/12/2005 horas=7

# empregado horista, com horas, com overtime, com sindicato, com taxas adicionais
id5=criarEmpregado nome="Claudia Raia" endereco="end5" tipo=horista salario=10,00
alteraEmpregado emp=${id5} atributo=sindicalizado valor=true idSindicato=s124 taxaSindical=1,20
alteraEmpregado emp=${id5} atributo=metodoPagamento valor1=banco banco="Banco do Brasil" agencia=1591-1 contaCorrente=51002-2
lancaCartao emp=${id5} data=1/1/2005 horas=10
lancaCartao emp=${id5} data=2/1/2005 horas=7
lancaCartao emp=${id5} data=1/2/2005 horas=8
lancaCartao emp=${id5} data=2/2/2005 horas=7
lancaCartao emp=${id5} data=1/12/2005 horas=12
lancaCartao emp=${id5} data=2/12/2005 horas=7
lancaTaxaServico membro=s124 data=1/1/2005 valor=80
lancaTaxaServico membro=s124 data=1/12/2005 valor=80

# empregado assalariado, sem sindicato
id6=criarEmpregado nome="Natalia do Valle" endereco="end6" tipo=assalariado salario=1000,00
alteraEmpregado emp=${id6} atributo=sindicalizado valor=false
alteraEmpregado emp=${id6} atributo=metodoPagamento valor1=correios

# empregado assalariado, com sindicato, sem taxas adicionais
id7=criarEmpregado nome="Regina Duarte" endereco="end7" tipo=assalariado salario=1100,00
alteraEmpregado emp=${id7} atributo=sindicalizado valor=true idSindicato=s125 taxaSindical=1,00
alteraEmpregado emp=${id7} atributo=metodoPagamento valor1=correios

# empregado assalariado, com sindicato, com taxas adicionais
id8=criarEmpregado nome="Flavia Alessandra" endereco="end8" tipo=assalariado salario=1200,00
alteraEmpregado emp=${id8} atributo=sindicalizado valor=true idSindicato=s126 taxaSindical=1,00
alteraEmpregado emp=${id8} atributo=metodoPagamento valor1=correios
lancaTaxaServico membro=s126 data=1/1/2005 valor=70
lancaTaxaServico membro=s126 data=1/12/2005 valor=75

# empregado commisionado, sem vendas, sem sindicato
id9=criarEmpregado nome="Deborah Secco" endereco="end9" tipo=comissionado salario=1300,00 comissao=0,11
alteraEmpregado emp=${id9} atributo=sindicalizado valor=false
alteraEmpregado emp=${id9} atributo=metodoPagamento valor1=correios

# empregado commisionado, com vendas, sem sindicato
id10=criarEmpregado nome="Ana Paula Arosio" endereco="end10" tipo=comissionado salario=1400,00 comissao=0,12
alteraEmpregado emp=${id10} atributo=sindicalizado valor=false
alteraEmpregado emp=${id10} atributo=metodoPagamento valor1=correios
lancaVenda emp=${id10} data=1/1/2005 valor=123,45
lancaVenda emp=${id10} data=2/1/2005 valor=200
lancaVenda emp=${id10} data=1/2/2005 valor=123,1
lancaVenda emp=${id10} data=2/2/2005 valor=500
lancaVenda emp=${id10} data=1/12/2005 valor=600
lancaVenda emp=${id10} data=2/12/2005 valor=800

# empregado commisionado, com vendas, com sindicato, sem taxas adicionais
id11=criarEmpregado nome="Suzana Vieira" endereco="end11" tipo=comissionado salario=1500,00 comissao=0,13
alteraEmpregado emp=${id11} atributo=sindicalizado valor=true idSindicato=s127 taxaSindical=1,00
alteraEmpregado emp=${id11} atributo=metodoPagamento valor1=correios
lancaVenda emp=${id11} data=1/1/2005 valor=123,45
lancaVenda emp=${id11} data=2/1/2005 valor=200
lancaVenda emp=${id11} data=1/2/2005 valor=123,1
lancaVenda emp=${id11} data=2/2/2005 valor=500
lancaVenda emp=${id11} data=1/12/2005 valor=600
lancaVenda emp=${id11} data=2/12/2005 valor=800

# empregado commisionado, com vendas, com sindicato, com taxas adicionais
id12=criarEmpregado nome="Maite Proenca" endereco="end12" tipo=comissionado salario=1600,00 comissao=0,14
alteraEmpregado emp=${id12} atributo=sindicalizado valor=true idSindicato=s128 taxaSindical=1,00
alteraEmpregado emp=${id12} atributo=metodoPagamento valor1=correios
lancaVenda emp=${id12} data=1/1/2005 valor=123,45
lancaVenda emp=${id12} data=2/1/2005 valor=200
lancaVenda emp=${id12} data=1/2/2005 valor=123,1
lancaVenda emp=${id12} data=2/2/2005 valor=500
lancaVenda emp=${id12} data=1/12/2005 valor=600
lancaVenda emp=${id12} data=2/12/2005 valor=800
lancaTaxaServico membro=s128 data=1/1/2005 valor=70
lancaTaxaServico membro=s128 data=1/12/2005 valor=75

# totalFolha nao roda a folha mas diz quanto seria o total se rodasse
expect 0,00 totalFolha data=1/1/2005
expect 0,00 totalFolha data=2/1/2005
expect 0,00 totalFolha data=3/1/2005
expect 0,00 totalFolha data=4/1/2005
expect 0,00 totalFolha data=5/1/2005
expect 0,00 totalFolha data=6/1/2005
expect 748,53 totalFolha data=7/1/2005
rodaFolha data=7/1/2005 saida=folha-2005-01-07.txt
equalFiles file1=ok/folha-2005-01-07.txt file2=folha-2005-01-07.txt
expect 0,00 totalFolha data=8/1/2005
expect 0,00 totalFolha data=9/1/2005
expect 0,00 totalFolha data=10/1/2005
expect 0,00 totalFolha data=11/1/2005
expect 0,00 totalFolha data=12/1/2005
expect 0,00 totalFolha data=13/1/2005
expect 2803,04 totalFolha data=14/1/2005
rodaFolha data=14/1/2005 saida=folha-2005-01-14.txt
equalFiles file1=ok/folha-2005-01-14.txt file2=folha-2005-01-14.txt
expect 0,00 totalFolha data=15/1/2005
expect 0,00 totalFolha data=16/1/2005
expect 0,00 totalFolha data=17/1/2005
expect 0,00 totalFolha data=18/1/2005
expect 0,00 totalFolha data=19/1/2005
expect 0,00 totalFolha data=20/1/2005
expect 0,00 totalFolha data=21/1/2005
rodaFolha data=21/1/2005 saida=folha-2005-01-21.txt
equalFiles file1=ok/folha-2005-01-21.txt file2=folha-2005-01-21.txt
expect 0,00 totalFolha data=22/1/2005
expect 0,00 totalFolha data=23/1/2005
expect 0,00 totalFolha data=24/1/2005
expect 0,00 totalFolha data=25/1/2005
expect 0,00 totalFolha data=26/1/2005
expect 0,00 totalFolha data=27/1/2005
expect 2676,91 totalFolha data=28/1/2005
rodaFolha data=28/1/2005 saida=folha-2005-01-28.txt
equalFiles file1=ok/folha-2005-01-28.txt file2=folha-2005-01-28.txt
expect 0,00 totalFolha data=29/1/2005
expect 0,00 totalFolha data=30/1/2005
expect 3300,00 totalFolha data=31/1/2005
rodaFolha data=31/1/2005 saida=folha-2005-01-31.txt
equalFiles file1=ok/folha-2005-01-31.txt file2=folha-2005-01-31.txt
expect 0,00 totalFolha data=1/2/2005
expect 0,00 totalFolha data=2/2/2005
expect 0,00 totalFolha data=3/2/2005
expect 651,90 totalFolha data=4/2/2005
rodaFolha data=4/2/2005 saida=folha-2005-02-04.txt
equalFiles file1=ok/folha-2005-02-04.txt file2=folha-2005-02-04.txt
expect 0,00 totalFolha data=5/2/2005
expect 0,00 totalFolha data=6/2/2005
expect 0,00 totalFolha data=7/2/2005
expect 0,00 totalFolha data=8/2/2005
expect 0,00 totalFolha data=9/2/2005
expect 0,00 totalFolha data=10/2/2005
expect 2919,91 totalFolha data=11/2/2005
rodaFolha data=11/2/2005 saida=folha-2005-02-11.txt
equalFiles file1=ok/folha-2005-02-11.txt file2=folha-2005-02-11.txt
expect 0,00 totalFolha data=12/2/2005
expect 0,00 totalFolha data=13/2/2005
expect 0,00 totalFolha data=14/2/2005
expect 0,00 totalFolha data=15/2/2005
expect 0,00 totalFolha data=16/2/2005
expect 0,00 totalFolha data=17/2/2005
expect 0,00 totalFolha data=18/2/2005
rodaFolha data=18/2/2005 saida=folha-2005-02-18.txt
equalFiles file1=ok/folha-2005-02-18.txt file2=folha-2005-02-18.txt
expect 0,00 totalFolha data=19/2/2005
expect 0,00 totalFolha data=20/2/2005
expect 0,00 totalFolha data=21/2/2005
expect 0,00 totalFolha data=22/2/2005
expect 0,00 totalFolha data=23/2/2005
expect 0,00 totalFolha data=24/2/2005
expect 2676,91 totalFolha data=25/2/2005
rodaFolha data=25/2/2005 saida=folha-2005-02-25.txt
equalFiles file1=ok/folha-2005-02-25.txt file2=folha-2005-02-25.txt
expect 0,00 totalFolha data=26/2/2005
expect 0,00 totalFolha data=27/2/2005
expect 3300,00 totalFolha data=28/2/2005
# rodar a folha duas vezes deve dar o mesmo resultado
rodaFolha data=28/2/2005 saida=folha-2005-02-28.txt
equalFiles file1=ok/folha-2005-02-28.txt file2=folha-2005-02-28.txt
rodaFolha data=28/2/2005 saida=folha-2005-02-28.txt
equalFiles file1=ok/folha-2005-02-28.txt file2=folha-2005-02-28.txt

# Outros testes que estamos ignorando:
#    situacao quando o empregado acabou de ser contratado e deve receber parcialmente na primeira folha
#    muitos, muitos impostos de varios tipos que tem que ser descontados,
#    13o salario
#    etc. etc.
# Se alguem descobrir erros nesse script, favor avisar a Jacques
# Assim, poderei compartilhar testes corretos com todos.
# (escrevi os testes mas nao os executei ...)
#####################################################################################

# User Story de undo/redo

zerarSistema

id0=criarEmpregado nome="Joao da Silva" endereco="Rua dos Jooes, 333 - Campina Grande" tipo=horista salario=23
id2=criarEmpregado nome="Gaiato Vendedor" endereco="Rua dos Bufoes, 333 - Campina Grande" tipo=comissionado salario=2300 comissao=0,05
removerEmpregado emp=${id0}
id1=criarEmpregado nome="Joaozinho da Silva" endereco="Rua dos Jooes, 333 - Campina Grande" tipo=horista salario=23
alteraEmpregado emp=${id2} atributo=metodoPagamento valor1=correios
alteraEmpregado emp=${id2} atributo=sindicalizado valor=true idSindicato=s123 taxaSindical=30
alteraEmpregado emp=${id2} atributo=metodoPagamento valor1=banco banco="Banco do Brasil" agencia=1591-1 contaCorrente=51000-0
getAtributoEmpregado emp=${id2} atributo=banco
getEmpregadoPorNome nome="Joaozinho da Silva" indice=1
getHorasExtrasTrabalhadas emp=${id1} dataInicial=1/1/2005 dataFinal=1/12/2005
getHorasNormaisTrabalhadas emp=${id1} dataInicial=1/1/2005 dataFinal=1/12/2005
getTaxasServico emp=${id2} dataInicial=1/1/2005 dataFinal=1/12/2005
getVendasRealizadas emp=${id2} dataInicial=1/1/2005 dataFinal=1/12/2005
totalFolha data=7/1/2005
lancaCartao emp=${id1} data=1/1/2005 horas=8
lancaCartao emp=${id1} data=2/1/2005 horas=10
lancaTaxaServico membro=s123 data=1/1/2005 valor=80
lancaVenda emp=${id2} data=1/1/2005 valor=800
rodaFolha data=11/2/2005 saida=folha-2005-02-11.txt
zerarSistema

# TESTES DE UNDO
expect 0 getNumeroDeEmpregados
# undo de zerarSistema
undo
expect 2 getNumeroDeEmpregados
expect 800,00 getVendasRealizadas emp=${id2} dataInicial=1/1/2005 dataFinal=1/12/2005
expect 80,00 getTaxasServico emp=${id2} dataInicial=1/1/2005 dataFinal=1/12/2005
expect 16 getHorasNormaisTrabalhadas emp=${id1} dataInicial=1/1/2005 dataFinal=1/12/2005
expect 2 getHorasExtrasTrabalhadas emp=${id1} dataInicial=1/1/2005 dataFinal=1/12/2005
# undo de rodaFolha
undo
expect 2 getNumeroDeEmpregados
expect 800,00 getVendasRealizadas emp=${id2} dataInicial=1/1/2005 dataFinal=1/12/2005
expect 80,00 getTaxasServico emp=${id2} dataInicial=1/1/2005 dataFinal=1/12/2005
expect 16 getHorasNormaisTrabalhadas emp=${id1} dataInicial=1/1/2005 dataFinal=1/12/2005
expect 2 getHorasExtrasTrabalhadas emp=${id1} dataInicial=1/1/2005 dataFinal=1/12/2005
# undo de lancaVenda
undo
expect 2 getNumeroDeEmpregados
expect 0,00 getVendasRealizadas emp=${id2} dataInicial=1/1/2005 dataFinal=1/12/2005
expect 80,00 getTaxasServico emp=${id2} dataInicial=1/1/2005 dataFinal=1/12/2005
expect 16 getHorasNormaisTrabalhadas emp=${id1} dataInicial=1/1/2005 dataFinal=1/12/2005
expect 2 getHorasExtrasTrabalhadas emp=${id1} dataInicial=1/1/2005 dataFinal=1/12/2005
# undo de lancaTaxaServico
undo
expect 2 getNumeroDeEmpregados
expect 0,00 getVendasRealizadas emp=${id2} dataInicial=1/1/2005 dataFinal=1/12/2005
expect 0,00 getTaxasServico emp=${id2} dataInicial=1/1/2005 dataFinal=1/12/2005
expect 16 getHorasNormaisTrabalhadas emp=${id1} dataInicial=1/1/2005 dataFinal=1/12/2005
expect 2 getHorasExtrasTrabalhadas emp=${id1} dataInicial=1/1/2005 dataFinal=1/12/2005
# undo de lancaCartao
undo
expect 2 getNumeroDeEmpregados
expect 0,00 getVendasRealizadas emp=${id2} dataInicial=1/1/2005 dataFinal=1/12/2005
expect 0,00 getTaxasServico emp=${id2} dataInicial=1/1/2005 dataFinal=1/12/2005
expect 8 getHorasNormaisTrabalhadas emp=${id1} dataInicial=1/1/2005 dataFinal=1/12/2005
expect 0 getHorasExtrasTrabalhadas emp=${id1} dataInicial=1/1/2005 dataFinal=1/12/2005
# undo de lancaCartao
undo
expect 2 getNumeroDeEmpregados
expect 0,00 getVendasRealizadas emp=${id2} dataInicial=1/1/2005 dataFinal=1/12/2005
expect 0,00 getTaxasServico emp=${id2} dataInicial=1/1/2005 dataFinal=1/12/2005
expect 0 getHorasNormaisTrabalhadas emp=${id1} dataInicial=1/1/2005 dataFinal=1/12/2005
expect 0 getHorasExtrasTrabalhadas emp=${id1} dataInicial=1/1/2005 dataFinal=1/12/2005
# nao existe undo de metodos "get" como totalFolha, getAtributoEmpregado, ...
# ... getEmpregadoPorNome, getHorasExtrasTrabalhadas, getHorasNormaisTrabalhadas, getTaxasServico, ...
# ... getVendasRealizadas
# undo de alteraEmpregado
expect banco getAtributoEmpregado emp=${id2} atributo=metodoPagamento
undo
expect correios getAtributoEmpregado emp=${id2} atributo=metodoPagamento
# undo de alteraEmpregado
expect true getAtributoEmpregado emp=${id2} atributo=sindicalizado
undo
expect false getAtributoEmpregado emp=${id2} atributo=sindicalizado
# undo de alteraEmpregado
expect correios getAtributoEmpregado emp=${id2} atributo=metodoPagamento
undo
expect emMaos getAtributoEmpregado emp=${id2} atributo=metodoPagamento
# undo de criarEmpregado
expect "Joaozinho da Silva" getAtributoEmpregado emp=${id1} atributo=nome
undo
expectError "Empregado nao existe." getAtributoEmpregado emp=${id1} atributo=nome
# undo removerEmpregado
undo
expect "Joao da Silva" getAtributoEmpregado emp=${id0} atributo=nome
# undo de criarEmpregado
expect "Gaiato Vendedor" getAtributoEmpregado emp=${id2} atributo=nome
undo
expectError "Empregado nao existe." getAtributoEmpregado emp=${id2} atributo=nome
# undo de criarEmpregado
expect "Joao da Silva" getAtributoEmpregado emp=${id0} atributo=nome
undo
expectError "Empregado nao existe." getAtributoEmpregado emp=${id0} atributo=nome
expect 0 getNumeroDeEmpregados
# undo de zerarSistema
undo
# undo de comando que nao existe
expectError "Nao ha comando a desfazer." undo

# TESTES DE REDO
redo
redo
redo
expect 2 getNumeroDeEmpregados
redo
expect 1 getNumeroDeEmpregados
# expectError "Nao ha comando a refazer." redo

# teste de undo quando o comando da erro (na entra na lista de comandos
expect 0,00 getVendasRealizadas emp=${id2} dataInicial=1/1/2005 dataFinal=1/12/2005
lancaVenda emp=${id2} data=2/2/2005 valor=600
expect 600,00 getVendasRealizadas emp=${id2} dataInicial=1/1/2005 dataFinal=1/12/2005
expectError "Data invalida." lancaVenda emp=${id2} data=32/2/2005 valor=100
expect 600,00 getVendasRealizadas emp=${id2} dataInicial=1/1/2005 dataFinal=1/12/2005
undo
expect 0,00 getVendasRealizadas emp=${id2} dataInicial=1/1/2005 dataFinal=1/12/2005

expectError "Nao pode dar comandos depois de encerrarSistema." undo

#####################################################################################
... (file truncated for brevity during patch creation; full content preserved in workspace file)

encerrarSistema
quit
# Combined persistent tests (intermediate encerrarSistema removed)
# Generated from combined_all.txt: removed intermediate encerrarSistema and quit lines; one final encerrarSistema and quit appended

